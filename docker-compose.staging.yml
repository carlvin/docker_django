services:

  web: 
    container_name: cool_carl_prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    # command: sh -c "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - static_volume:/home/static
      - media_volume:/home/media
    env_file:
      - ./.env.staging
    depends_on:
      - db
    
  db:
    container_name: cool_carl_db_prod
    image: postgres:15.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.staging.db

  nginx-proxy:
    container_name: nginx-proxy
    #build directory/folder location 
    build: ./nginx
    ports:
      - "443:443"
      - "80:80"
      
    volumes:
      - static_volume:/home/static
      - media_volume:/home/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
    restart: always

  nginx-proxy-letsencrypt:
    image: nginxproxy/acme-companion:latest
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme: